{"componentChunkName":"component---src-pages-containers-index-mdx","path":"/containers/","result":{"pageContext":{"frontmatter":{"title":"Containers Lecture","description":"Containers Lecture"},"relativePagePath":"/containers/index.mdx","titleType":"page","MdxNode":{"id":"6b419c07-a01d-548a-aa8e-5560d86dc7fd","children":[],"parent":"3106855a-3c70-56cd-9435-1f7c58483494","internal":{"content":"---\ntitle: Containers Lecture\ndescription: Containers Lecture\n---\n\n<AnchorLinks>\n  <AnchorLink>Containers</AnchorLink>\n  <AnchorLink>Activities</AnchorLink>\n</AnchorLinks>\n\n# Containers\n\nContainers are a standard way to package an application and all its dependencies so that it can be moved between environments and run without change. They work by hiding the differences between applications inside the container so that everything outside the container can be standardized.\n\nFor example, Docker created standard way to create images for Linux Containers.\n\n## Resources\n\n- Presentation: [Containers Basics](/slides/02-Containers-Basics.pdf)\n\n## References\n\n### Docker Commands\n\nBelow are some commands we use often on Docker.\n\n```\n# Know docker version\ndocker -version\n\n# Run a container\ndocker run <image>\n\n# List containers running\ndocker ps\n\n# Stop a container\ndocker stop <container-name|container-id>\n\n# Remove a container\ndocker rm <container-name|container-id>\n\n# Login into registry\ndocker login\n\n# Build an image\ndocker build <image_name>:<tag> .\n\n# Pull the image\ndocker pull <image_name>:<tag>\n\n# Push an image\ndocker push <image_name>:<tag>\n\n# List images\ndocker images\n```\n\n## Activities\n\n| Task                            | Description         | Link        | Time    |\n| --------------------------------| ------------------  |:----------- |---------|\n| *** Walkthroughs ***                         |         |         |     |\n| What is a Container? | A look under the the covers at what is a Linux Container? | <a href=\"https://www.katacoda.com/courses/container-runtimes/what-is-a-container\" target=\"_blank\">Understand Containers</a> | 10 min |\n| What is an Image? | A look under the the covers at what is a Linux Container Image? | <a href=\"https://www.katacoda.com/courses/container-runtimes/what-is-a-container-image\" target=\"_blank\">Container Images</a> | 10 min |\n| Docker Basics | Set of walkthroughs that cover docker basics | <a href=\"https://www.katacoda.com/courses/docker\" target=\"_blank\">Docker Basics</a> | 10 min |\n| *** Try It Yourself ***                         |         |         |     |\n| Docker Lab | Running a Sample Application on Docker | [Docker Lab](./activities/) | 30 min |\n\n\nOnce you have completed these tasks, you should have a base understanding of containers and how to use Docker.\n","type":"Mdx","contentDigest":"a7b9d18579b04ca8d95190594e36bda0","counter":283,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Containers Lecture","description":"Containers Lecture"},"exports":{},"rawBody":"---\ntitle: Containers Lecture\ndescription: Containers Lecture\n---\n\n<AnchorLinks>\n  <AnchorLink>Containers</AnchorLink>\n  <AnchorLink>Activities</AnchorLink>\n</AnchorLinks>\n\n# Containers\n\nContainers are a standard way to package an application and all its dependencies so that it can be moved between environments and run without change. They work by hiding the differences between applications inside the container so that everything outside the container can be standardized.\n\nFor example, Docker created standard way to create images for Linux Containers.\n\n## Resources\n\n- Presentation: [Containers Basics](/slides/02-Containers-Basics.pdf)\n\n## References\n\n### Docker Commands\n\nBelow are some commands we use often on Docker.\n\n```\n# Know docker version\ndocker -version\n\n# Run a container\ndocker run <image>\n\n# List containers running\ndocker ps\n\n# Stop a container\ndocker stop <container-name|container-id>\n\n# Remove a container\ndocker rm <container-name|container-id>\n\n# Login into registry\ndocker login\n\n# Build an image\ndocker build <image_name>:<tag> .\n\n# Pull the image\ndocker pull <image_name>:<tag>\n\n# Push an image\ndocker push <image_name>:<tag>\n\n# List images\ndocker images\n```\n\n## Activities\n\n| Task                            | Description         | Link        | Time    |\n| --------------------------------| ------------------  |:----------- |---------|\n| *** Walkthroughs ***                         |         |         |     |\n| What is a Container? | A look under the the covers at what is a Linux Container? | <a href=\"https://www.katacoda.com/courses/container-runtimes/what-is-a-container\" target=\"_blank\">Understand Containers</a> | 10 min |\n| What is an Image? | A look under the the covers at what is a Linux Container Image? | <a href=\"https://www.katacoda.com/courses/container-runtimes/what-is-a-container-image\" target=\"_blank\">Container Images</a> | 10 min |\n| Docker Basics | Set of walkthroughs that cover docker basics | <a href=\"https://www.katacoda.com/courses/docker\" target=\"_blank\">Docker Basics</a> | 10 min |\n| *** Try It Yourself ***                         |         |         |     |\n| Docker Lab | Running a Sample Application on Docker | [Docker Lab](./activities/) | 30 min |\n\n\nOnce you have completed these tasks, you should have a base understanding of containers and how to use Docker.\n","fileAbsolutePath":"/home/travis/build/ibm-cloud-architecture/learning-cloudnative-101/src/pages/containers/index.mdx"}}}}